<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>水族館チケット販売サイト</title>
        <style>
            body {
                font-family: 'cursive', sans-serif;
                background-color: #b4e0e7;
                margin: 0;
                padding: 0;
            }

            header {
                background-color: #003366;
                color: #fff;
                padding: 15px;
                text-align: center;
            }

            #sort-select {
                margin-top: 20px;
                margin-left: 250px;
                padding: 10px;
                font-size: 16px;
                background-color: #003366;
                color: #fff;
            }

            .product-list {
                display: flex;
                flex-wrap: wrap;
                gap: 20px;
                justify-content: center;
                margin-top: 20px;
                background-color: #fff;
                padding: 20px;
                box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            }

            .product-item {
                border: 1px solid #ddd;
                padding: 10px;
                margin: 50px 0;
                width: calc(25% - 20px);
                text-align: center;
                background-color: #003366;
                position: relative;
                overflow: hidden;
                transition: transform 0.3s ease-in-out;
            }

            .product-item:hover {
                transform: scale(1.05);
            }

            .product-item img {
                max-width: 100%;
                width: 100%;
                height: 300px;
                object-fit: cover;
                border-bottom: 1px solid #ddd;
                margin-bottom: 10px;
                border-radius: 10px;
                box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);
            }

            .product-details {
                display: flex;
                flex-direction: column;
                align-items: center;
                color: #fff;
            }

            .price {
                color: #fff;
            }

            a {
                text-decoration: none;
                color: #fff;
                font-weight: bold;
            }

            a:hover {
                text-decoration: underline;
            }
        </style>
    </head>
    <body>
        <header>
            <h1>水族館チケット販売サイト</h1>
        </header>
        <select id="sort-select" onchange="sortProducts()">
            <option value="high-price">商品価格高い順</option>
            <option value="low-price">商品価格低い順</option>
            <option value="alphabetical">商品名50音順</option>
            <option value="most-reviews">レビュー数多い順</option>
            <option value="high-rating">レビュー評価高い順</option>
        </select>
        <div class="product-list">
            <% allMenu.forEach(product=> { %> <div class="product-item" data-review-count="<%= product.reviews.length %>" data-average-rating="<%= product.averageRating %>">
                    <img src="<%= product.imagePath %>" alt="<%= product.name %>">
                    <div class="product-details">
                        <a href="/edit/<%= product.id %>">
                            <h2><%= product.name %></h2>
                        <p class="price">価格: <%= product.price %>円</p>
                        </a>
                        <% if (product.reviews && product.reviews.length> 0) { %>
                            <p>レビュー数: <%= product.reviews.length %>件</p>
                            <p>平均評価: <%= product.averageRating %> / 5</p>
                            <% } else { %>
                                <p>レビューはまだありません。</p>
                                <% } %>
                    </div>
                </div>
                <% }); %>
        </div>
        <script type="text/javascript">
            console.log("calculateAverageRating function is:", calculateAverageRating);
            function calculateAverageRating(reviews) {
                if (!reviews || reviews.length === 0) {
                    return "0";
                }

                let totalRating = 0;

                reviews.forEach(review => {
                    if (typeof review.evaluation === 'number') {
                        totalRating += review.evaluation;
                    } else if (typeof review.evaluation === 'string' && !isNaN(review.evaluation)) {
                        totalRating += parseFloat(review.evaluation);
                    }
                });

                const averageRating = totalRating / reviews.length;
                console.log("Average Rating:", averageRating);

                return averageRating.toFixed(1);
            }

            let allMenu = JSON.parse('<%= JSON.stringify(allMenu) %>'.replace(/&#34;/g, '"'));
            console.log("allMenu data:", allMenu);

            function sortProducts() {
                let select = document.getElementById("sort-select");
                let selectedValue = select.options[select.selectedIndex].value;

                let productContainer = document.querySelector(".product-list");

                let products = document.querySelectorAll(".product-item");

                let productsArray = Array.from(products);

                productsArray.sort(function (a, b) {
                    let nameA = a.querySelector("h2").innerText.toLowerCase();
                    let nameB = b.querySelector("h2").innerText.toLowerCase();

                    if (selectedValue === "high-price") {
                        return parseFloat(b.querySelector(".price").innerText.match(/\d+/)[0]) - parseFloat(a.querySelector(".price").innerText.match(/\d+/)[0]);
                    } else if (selectedValue === "low-price") {
                        return parseFloat(a.querySelector(".price").innerText.match(/\d+/)[0]) - parseFloat(b.querySelector(".price").innerText.match(/\d+/)[0]);
                    } else if (selectedValue === "alphabetical") {
                        return nameA.localeCompare(nameB);
                    } else if (selectedValue === "most-reviews") {
                        return parseInt(b.getAttribute("data-review-count")) - parseInt(a.getAttribute("data-review-count"));
                    } else if (selectedValue === "high-rating") {
                        return parseFloat(b.getAttribute("data-average-rating")) - parseFloat(a.getAttribute("data-average-rating"));
                    }
                });

                productsArray.forEach(function (product) {
                    productContainer.appendChild(product);
                });
            }

            allMenu.forEach(product => {
                if (product.reviews) {
                    product.averageRating = calculateAverageRating(product.reviews);
                } else {
                    product.averageRating = null;
                }
                console.log(product);
            });
        </script>
    </body>
</html>
